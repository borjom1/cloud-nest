/*
 * This file is generated by jOOQ.
 */
package com.cloud.nest.db.fm.tables.records;


import com.cloud.nest.db.fm.tables.File;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileRecord extends UpdatableRecordImpl<FileRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>fm.file.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>fm.file.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>fm.file.s3_object_key</code>.
     */
    public void setS3ObjectKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>fm.file.s3_object_key</code>.
     */
    public String getS3ObjectKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>fm.file.filename</code>.
     */
    public void setFilename(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>fm.file.filename</code>.
     */
    public String getFilename() {
        return (String) get(2);
    }

    /**
     * Setter for <code>fm.file.ext</code>.
     */
    public void setExt(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>fm.file.ext</code>.
     */
    public String getExt() {
        return (String) get(3);
    }

    /**
     * Setter for <code>fm.file.size</code>.
     */
    public void setSize(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>fm.file.size</code>.
     */
    public Long getSize() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>fm.file.uploaded_by</code>.
     */
    public void setUploadedBy(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>fm.file.uploaded_by</code>.
     */
    public Long getUploadedBy() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>fm.file.deleted</code>.
     */
    public void setDeleted(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>fm.file.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>fm.file.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>fm.file.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>fm.file.updated</code>.
     */
    public void setUpdated(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>fm.file.updated</code>.
     */
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>fm.file.content_type</code>.
     */
    public void setContentType(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>fm.file.content_type</code>.
     */
    public String getContentType() {
        return (String) get(9);
    }

    /**
     * Setter for <code>fm.file.placed_to_bin</code>.
     */
    public void setPlacedToBin(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>fm.file.placed_to_bin</code>.
     */
    public LocalDateTime getPlacedToBin() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileRecord
     */
    public FileRecord() {
        super(File.FILE);
    }

    /**
     * Create a detached, initialised FileRecord
     */
    public FileRecord(Long id, String s3ObjectKey, String filename, String ext, Long size, Long uploadedBy, Boolean deleted, LocalDateTime created, LocalDateTime updated, String contentType, LocalDateTime placedToBin) {
        super(File.FILE);

        setId(id);
        setS3ObjectKey(s3ObjectKey);
        setFilename(filename);
        setExt(ext);
        setSize(size);
        setUploadedBy(uploadedBy);
        setDeleted(deleted);
        setCreated(created);
        setUpdated(updated);
        setContentType(contentType);
        setPlacedToBin(placedToBin);
        resetChangedOnNotNull();
    }
}
