/*
 * This file is generated by jOOQ.
 */
package com.cloud.nest.db.fm.tables.records;


import com.cloud.nest.db.fm.tables.UserStorage;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserStorageRecord extends UpdatableRecordImpl<UserStorageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>fm.user_storage.user_id</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>fm.user_storage.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>fm.user_storage.storage_space</code>.
     */
    public void setStorageSpace(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>fm.user_storage.storage_space</code>.
     */
    public Long getStorageSpace() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>fm.user_storage.used_storage_space</code>.
     */
    public void setUsedStorageSpace(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>fm.user_storage.used_storage_space</code>.
     */
    public Long getUsedStorageSpace() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>fm.user_storage.total_downloaded_bytes</code>.
     */
    public void setTotalDownloadedBytes(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>fm.user_storage.total_downloaded_bytes</code>.
     */
    public Long getTotalDownloadedBytes() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>fm.user_storage.total_uploaded_bytes</code>.
     */
    public void setTotalUploadedBytes(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>fm.user_storage.total_uploaded_bytes</code>.
     */
    public Long getTotalUploadedBytes() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>fm.user_storage.disabled</code>.
     */
    public void setDisabled(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>fm.user_storage.disabled</code>.
     */
    public Boolean getDisabled() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>fm.user_storage.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>fm.user_storage.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>fm.user_storage.updated</code>.
     */
    public void setUpdated(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>fm.user_storage.updated</code>.
     */
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserStorageRecord
     */
    public UserStorageRecord() {
        super(UserStorage.USER_STORAGE);
    }

    /**
     * Create a detached, initialised UserStorageRecord
     */
    public UserStorageRecord(Long userId, Long storageSpace, Long usedStorageSpace, Long totalDownloadedBytes, Long totalUploadedBytes, Boolean disabled, LocalDateTime created, LocalDateTime updated) {
        super(UserStorage.USER_STORAGE);

        setUserId(userId);
        setStorageSpace(storageSpace);
        setUsedStorageSpace(usedStorageSpace);
        setTotalDownloadedBytes(totalDownloadedBytes);
        setTotalUploadedBytes(totalUploadedBytes);
        setDisabled(disabled);
        setCreated(created);
        setUpdated(updated);
        resetChangedOnNotNull();
    }
}
